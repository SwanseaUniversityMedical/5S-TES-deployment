version: '3.7'

services:

######################################################
# TRE Proxy
######################################################

  nginx-dare:
    image: nginx:latest
    container_name: nginx_dare
    ports:
      - 9999:80
    networks:
      - sub-net
    depends_on:
      - submissionUI
      - submissionAPI
      - DataEgressUI
      - DataEgressAPI
      - tre-ui
      - tre-api
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf

######################################################
# TRE LAYER
######################################################

  tre-ui:
    platform: linux/x86_64
    image: harbor.ukserp.ac.uk:443/dare-trefx/control-tre-ui:${dareVer}
    container_name: treUI
    restart: always
    networks:
      - sub-net
    ports:
      - 8989:80
    depends_on:
      - tre-api
    environment:
      - TreAPISettings__Address=http://treAPI    
      - Serilog__SeqServerUrl=http://seq:5341
      - DemoMode=true
      - TreKeyCloakSettings__Authority=${TreKeyCloakAuthority}
      - TreKeyCloakSettings__MetadataAddress=${TreKeyCloakMetadataAddress}
      - TreKeyCloakSettings__BaseUrl=${TreKeyCloakBaseRealmAddress}
      - TreKeyCloakSettings__ClientId=${TreKeyCloakClientId}
      - TreKeyCloakSettings__ClientSecret=${TreKeyCloakSecret}
      - TreKeyCloakSettings__ValidAudiences=${TreValidAudiences}
      - TreKeyCloakSettings__Proxy=${useproxy}
      - TreKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - sslcookies=${sslcookies}
      - httpsRedirect=${httpsRedirect}
      - TreKeyCloakSettings__AccountManagementURL=${TreAccountManagementURLUI}
      - TreKeyCloakSettings__BypassProxy="treAPI,seq-tre"    
      - TreKeyCloakSettings__TokenExpiredAddress=${TreKeyCloakTokenExpredAddressUI}
      - TreKeyCloakSettings__UseRedirectURL=${TreKeyCloakUseRedirect}
      - TreKeyCloakSettings__RedirectURL=${TreKeyCloakClientUIRediretURL}


  tre-api:
    platform: linux/x86_64
    image: harbor.ukserp.ac.uk:443/dare-trefx/control-tre-api:${dareVer}
    container_name: treapi
    restart: always
    networks:
      - sub-net
     # - engine-tre
      
    ports:
      - 8072:80
    depends_on:
      postgresql:
        condition: service_healthy
      keycloak: 
        condition: service_healthy
      rabbitmq:
        condition: service_healthy   
      minio2:
        condition: service_healthy
      submissionAPI:
        condition: service_started
    environment:
      - DemoMode=true
      - DemoModeDefaultP=password123
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=DARE-Tre;Include Error Detail=true;User Id=${PGLOGIN};Password=${PGPASSWORD};TrustServerCertificate=True;
      - RabbitMQ__HostAddress=rabbitmq
      - Serilog__SeqServerUrl=http://seq:5341
      - DareAPISettings__Address=http://submissionAPI
      - DataEgressAPISettings__Address=https://egressAPI
      - EnableExternalHangfire=${EnableExternalHangfire}
      - IgnoreHutchSSL=${IgnoreHutchSSL}
      - TreKeyCloakSettings__Authority=${TreKeyCloakAuthority}
      - TreKeyCloakSettings__MetadataAddress=${TreKeyCloakMetadataAddress}
      - TreKeyCloakSettings__BaseUrl=${TreKeyCloakBaseRealmAddress}
      - TreKeyCloakSettings__ClientId=${TreKeyCloakClientId}
      - TreKeyCloakSettings__ClientSecret=${TreKeyCloakSecret}
      - TreKeyCloakSettings__ValidAudiences=${TreValidAudiences}
      - TreKeyCloakSettings__Proxy=${useproxy}
      - EnableExternalHangfire=true
      - TreKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - TreKeyCloakSettings__BypassProxy="treAPI,seq-tre"    
      - TreKeyCloakSettings__TokenExpiredAddress=${TreKeyCloakTokenExpredAddressUI}
      - TreKeyCloakSettings__UseRedirectURL=${TreKeyCloakUseRedirect}
      - TreKeyCloakSettings__RedirectURL=${TreKeyCloakClientUIRediretURL}
      - DataEgressKeyCloakSettings__Authority=${EgressKeyCloakAuthority}
      - DataEgressKeyCloakSettings__MetadataAddress=${EgressKeyCloakMetaDataAddress}
      - DataEgressKeyCloakSettings__BaseUrl=${EgressKeyCloakBaseRealmAddress}
      - DataEgressKeyCloakSettings__ClientId=${EgressKeyCloakClientId}
      - DataEgressKeyCloakSettings__ClientSecret=${EgressKeyCloakSecret}
      - DataEgressKeyCloakSettings__ValidAudiences=${EgressValidAudiences}
      - DataEgressKeyCloakSettings__Proxy=${useproxy}
      - DataEgressKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - DataEgressKeyCloakSettings__BypassProxy="DataEgressUI,treAPI,seq-tre"    
      - DataEgressKeyCloakSettings__TokenExpiredAddress=${EgressKeyCloakTokenExpredAddressUI}
      - DataEgressKeyCloakSettings__UseRedirectURL=${EgressKeyCloakUseRedirect}
      - DataEgressKeyCloakSettings__RedirectURL=${EgressKeyCloakClientUIRediretURL}
      - SubmissionKeyCloakSettings__Authority=${SubmissionAPIKeyCloakAuthority}
      - SubmissionKeyCloakSettings__MetadataAddress=${SubmissionAPIKeyCloakMetadataAddress}
      - SubmissionKeyCloakSettings__BaseUrl=${SubmissionApiKeyCloakBaseRealmAddress}
      - SubmissionKeyCloakSettings__ClientId=${SubmissionApiKeyCloakClientId}
      - SubmissionKeyCloakSettings__ClientSecret=${SubmissionApiKeyCloakSecret}
      - SubmissionKeyCloakSettings__ValidAudiences=${SubmissionApiValidAudiences}
      - SubmissionKeyCloakSettings__Proxy=${useproxy}
      - SubmissionKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - SubmissionKeyCloakSettings__BypassProxy="treAPI,seq-tre"    
      - SubmissionKeyCloakSettings__TokenExpiredAddress=${SubmissionAPIKeyCloakTokenExpredAddressUI}
      - SubmissionKeyCloakSettings__UseRedirectURL=${SubmissionAPIKeyCloakUseRedirect}
      - SubmissionKeyCloakSettings__RedirectURL=${SubmissionAPIKeyCloakClientUIRedirectURL}
      - AgentSettings__UseTESK=${UseTESK}
      - AgentSettings__UseHutch=${UseHutch}
      - AgentSettings__UseRabbit=${UseRabbit}
      - JobSettings__scanSchedule=${scanSchedule}
      - JobSettings__syncSchedule=${syncSchedule}
      - DataEgressAPISettings__Address=http://DataEgressAPI:80
     # - AgentSettings__TESKAPIURL=http://tesk.test-tesk.dk.serp.ac.uk/ga4gh/tes/v1/tasks
      #- AgentSettings__URLHasuraToAdd=${HasuraIP}
      - TreName=${TreName}
      #- AgentSettings__Proxy=true
      #- AgentSettings__ProxyAddresURL=${proxyurl}
      #- AgentSettings__ImageNameToAddToToken=harbor.ukserp.ac.uk/dare-trefx/control-tre-hasura
      #- AgentSettings__TESKOutputBucketPrefix=http://s3.foo.bar.baz/
      - MinioTRESettings__Url=http://minio2:9000
      - MinioTRESettings__HutchURLOverride=${HutchMinioURLOverride}
      - MinioTRESettings__AccessKey=${TreMinioAdminUser}
      - MinioTRESettings__SecretKey=${TreMinioAdminPassword}
      - MinioTRESettings__AdminConsole=http://minio2:9001
      - MinioSubSettings__Url=${submissionMinioUrl}
      - MinioSubSettings__AccessKey=${MinioRootUser}
      - MinioSubSettings__SecretKey=${MinioRootPass}
      - MinioSubSettings__AdminConsole=${submissionMinioAdminConsole}
      - MinioSubSettings__BucketName=testbucket      
      - MinioSubSettings__AWSRegion=us-east-1
      - MinioTRESettings__AWSRegion=us-east-1
      - Hutch__APIAddress=${HutchAPIAddress}
      - Hutch__DbServer=${HutchDbServer}
      - Hutch__DbName=${HutchDbName}
      - Hutch__DbPort=${HutchDbPort}
      #- HasuraSettings__HasuraURL=${HasuraURL}
     # - HasuraSettings__HasuraAdminSecret=${HasuraPass} 

######################################################
# DataEgress LAYER
######################################################

  DataEgressUI:
    platform: linux/x86_64
    image: harbor.ukserp.ac.uk:443/dare-trefx/control-egress-ui:${dareVer}
    container_name: DataEgressUI
    restart: always
    networks:
      - sub-net
    ports:
      - 8100:80
    depends_on:
      - DataEgressAPI
    environment:
      - DemoMode=true
      - Serilog__SeqServerUrl=http://seq:5341
      - DataEgressKeyCloakSettings__Authority=${EgressKeyCloakAuthority}
      - DataEgressKeyCloakSettings__MetadataAddress=${EgressKeyCloakMetadataAddress}
      - DataEgressKeyCloakSettings__BaseUrl=${EgressKeyCloakBaseRealmAddress}
      - DataEgressKeyCloakSettings__ClientId=${EgressKeyCloakClientID}
      - DataEgressKeyCloakSettings__ClientSecret=${EgressKeyCloakSecret}
      - DataEgressKeyCloakSettings__ValidAudiences=${EgressValidAudiences}
      - DataEgressKeyCloakSettings__Proxy=${useproxy}
      - DataEgressKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - DataEgressKeyCloakSettings__BypassProxy=treAPI,seq-tre 
      - DataEgressKeyCloakSettings__TokenExpiredAddress=${EgressKeyCloakTokenExpredAddressUI}
      - DataEgressKeyCloakSettings__UseRedirectURL=${EgressKeyCloakUseRedirect}
      - DataEgressKeyCloakSettings__RedirectURL=${EgressKeyCloakClientUIRediretURL}
      - DataEgressAPISettings__Address=http://DataEgressAPI:80
      - sslcookies=${sslcookies}
      - httpsRedirect=${httpsRedirect}

  DataEgressAPI:
    platform: linux/x86_64
    image: harbor.ukserp.ac.uk:443/dare-trefx/control-egress-api:${dareVer}
    container_name: DataEgressAPI
    restart: always
    networks:
      - sub-net      
    ports:
      - 8101:80
    depends_on:
      postgresql:
        condition: service_healthy
      minio2:
        condition: service_healthy
      keycloak: 
        condition: service_healthy     
    environment:
      - DemoMode=true
      - DemoModeDefaultP=password123
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=DATA-Egress;Include Error Detail=true;User Id=${PGLOGIN};Password=${PGPASSWORD};TrustServerCertificate=True;
      - RabbitMQ__HostAddress=rabbitmq-tre
      - Serilog__SeqServerUrl=http://seq:5341
      - TreKeyCloakSettings__Authority=${TreAPIKeyCloakAuthority}
      - TreKeyCloakSettings__MetadataAddress=${TreAPIKeyCloakMetadataAddress}
      - TreKeyCloakSettings__BaseUrl=${TreAPIKeyCloakBaseRealmAddress}
      - TreKeyCloakSettings__ClientId=${TreAPIKeyCloakClientId}
      - TreKeyCloakSettings__ClientSecret=${TreAPIKeyCloakSecret}
      - TreKeyCloakSettings__ValidAudiences=${TreAPIValidAudiences}
      - TreKeyCloakSettings__Proxy=${useproxy}
      - TreKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - TreKeyCloakSettings__BypassProxy="treAPI,seq-tre"    
      - TreKeyCloakSettings__TokenExpiredAddress=${TreAPIKeyCloakTokenExpredAddressUI}
      - TreKeyCloakSettings__UseRedirectURL=${TreKeyCloakUseRedirect}
      - TreKeyCloakSettings__RedirectURL=${TreKeyCloakClientUIRediretURL}
      - DataEgressKeyCloakSettings__Authority=${EgressKeyCloakAuthority}
      - DataEgressKeyCloakSettings__MetadataAddress=${EgressKeyCloakMetadataAddress}
      - DataEgressKeyCloakSettings__BaseUrl=${EgressKeyCloakBaseRealmAddress}
      - DataEgressKeyCloakSettings__ClientId=${EgressKeyCloakClientID}
      - DataEgressKeyCloakSettings__ClientSecret=${EgressKeyCloakSecret}
      - DataEgressKeyCloakSettings__ValidAudiences=${EgressKeyCloakClientID}
      - DataEgressKeyCloakSettings__Proxy=${useproxy}
      - DataEgressKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - DataEgressKeyCloakSettings__BypassProxy="treAPI,seq-tre"    
      - DataEgressKeyCloakSettings__TokenExpiredAddress=${EgressKeyCloakTokenExpredAddressUI}
      - DataEgressKeyCloakSettings__UseRedirectURL=${EgressKeyCloakUseRedirect}
      - MinioSettings__Url=http://minio2:9000
      - MinioSettings__AccessKey=${TreMinioAdminUser}
      - MinioSettings__SecretKey=${TreMinioAdminPassword}
      - MinioSettings__BucketName=testbucket
      - MinioSettings__AdminConsole=http://minioIn:9001
      - TreAPISettings__Address=http://treapi:80
      - DataEgressAPISettings__Address=http://DataEgressAPI:8100



######################################################
# SUBMISSION LAYER
######################################################

  submissionUI:
    platform: linux/x86_64
    image: harbor.ukserp.ac.uk:443/dare-trefx/control-main-ui:${dareVer}
    container_name: submissionUI
    restart: always
    networks:
      - sub-net
    ports:
      - 7220:80
      - 8888:80
    depends_on:
      - submissionAPI      
    volumes:
      - data-protection:/root/.aspnet/DataProtection-Keys
    environment:
      - DemoMode=true
      - CONNECTIONSTRINGS__DEFAULTCONNECTION="Server=postgres;Port=32769;Database=DARE-Control;UserId=${PGLOGIN};Password=${PGPASSWORD};TrustServerCertificate=True;"
      - Serilog__SeqServerUrl=http://seq:5341
      - KeyCloakSettings__Proxy=false
      - DareAPISettings__Address=http://submissionAPI:80
      - DareAPISettings_HelpAddress=http://submissionAPI:80
      - FormIOSettings__UseInternal=true
      - SubmissionKeyCloakSettings__Proxy=${useproxy}
      - SubmissionKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - SubmissionKeyCloakSettings__BypassProxy="submissionAPI,seq"
      - SubmissionKeyCloakSettings__TokenExpiredAddress=${KeyCloakTokenExpredAddressUI}
      - SubmissionKeyCloakSettings__UseRedirectURL=${KeyCloakUseRedirect}
      - SubmissionKeyCloakSettings__RedirectURL=${KeyCloakClientUIRediretURL}
      - SubmissionKeyCloakSettings__ClientSecret=${SubmissionUIClientSecret}
      - SubmissionKeyCloakSettings__AccountManagementURL=${SubmissionUIAccountManagementURL}
      - SubmissionKeyCloakSettings__BaseUrl=${SubmissionUIKeyCloakBaseUrl}
      - SuppressAntiforgery=${SuppressAntiforgery} 
      - SubmissionKeyCloakSettings__MetadataAddress=${SubmissionUIKeyCloakMetadataAddress}
      - SubmissionKeyCloakSettings__Authority=${SubmissionUIKeyCloakAuthority}
      - URLSettingsFrontEnd__QueryImage=${URLSettingsFrontEndQueryImage}
      - URLSettingsFrontEnd__MinioUrl=${URLSettingsFrontEndMinioUrl}
      - sslcookies=${sslcookies}
      - httpsRedirect=${httpsRedirect}
      
# AccountManagementURL BaseUrl MetadataAddress Authority
      
#      - URLSettingsFrontEnd__MinioUrl=192.168.70.87:9001
  
  submissionAPI:
    platform: linux/x86_64
    image: harbor.ukserp.ac.uk:443/dare-trefx/control-main-api:${dareVer}
    container_name: submissionAPI
    restart: always
    networks:
      - sub-net
    ports:
      - 5034:80
      #- 5044:5034
    volumes:
      - data-protection:/root/.aspnet/DataProtection-Keys
    depends_on:
      keycloak: 
        condition: service_healthy
      postgresql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy  
      minioAAA:
        condition: service_healthy
    environment:
      - DemoMode=true
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=DARE-Control;Include Error Detail=true;User Id=${PGLOGIN};Password=${PGPASSWORD};TrustServerCertificate=True;
      - RabbitMQ__HostAddress=rabbitmq
      - Serilog__SeqServerUrl=http://seq:5341
      #- MinioSettings__ProxyAddresURLForExternalFetch=${ProxyAddresURLForExternalFetch}
      - MinioSettings__Url=http://minioAAA:9000
      - MinioSettings__AccessKey=${MinioRootUser}
      - MinioSettings__SecretKey=${MinioRootPass}
      - MinioSettings__BucketName=testbucket
      - SuppressAntiforgery=${SuppressAntiforgery}
      - MinioSettings__AdminConsole=http://minioAAA:9001
      - SubmissionKeyCloakSettings__Proxy=${useproxy}
      - SubmissionKeyCloakSettings__ProxyAddresURL=${proxyurl}
      - SubmissionKeyCloakSettings__BypassProxy=minioAAA,seq
      - SubmissionKeyCloakSettings__TokenExpiredAddress=${KeyCloakTokenExpredAddressUI}
      - SubmissionKeyCloakSettings__UseRedirectURL=${KeyCloakUseRedirect}
      - SubmissionKeyCloakSettings__RedirectURL=${KeyCloakClientUIRediretURL}
      - SubmissionKeyCloakSettings__BaseUrl=${SubmissionAPIKeyCloakBaseRealmAddress}
      - SubmissionKeyCloakSettings__MetadataAddress=${SubmissionAPIKeyCloakMetadataAddress}
      - SubmissionKeyCloakSettings__Authority=${SubmissionAPIKeyCloakAuthority}
      - SubmissionKeyCloakSettings__ClientSecret=${SubmissionAPIKeyCloakSecret}
      #- SubmissionKeyCloakSettings__RemoteSignOutPath=${SubmissionRemoteSignOutPath}
      - SubmissionKeyCloakSettings__SignedOutRedirectUri=${SubmissionSignedOutRedirectUri}
      - SubmissionKeyCloakSettings__TokenRefreshSeconds=${SubmissionTokenRefreshSeconds}
      - SubmissionKeyCloakSettings__ValidAudiences=${SubmissionValidAudiences}
      - SubmissionKeyCloakSettings__Server=${SubmissionServer}
      - SubmissionKeyCloakSettings__Protocol=${SubmissionServerProtocol}
      - SubmissionKeyCloakSettings__Realm=${SubmissionRealm}
      - SubmissionKeyCloakSettings__AutoTrustKeycloakCert=${SubmissionAutoTrustKeycloakCert}
      - SubmissionKeyCloakSettings__ValidIssuer=${SubmissionValidIssuer}
      - SubmissionKeyCloakSettings__ValidAudience=${SubmissionValidAudience}

      
######################################################
# Keycloak
######################################################
  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: keycloak
    environment:
      
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: ${PGLOGIN}
      KC_DB_PASSWORD: ${PGPASSWORD}
      KC_HOSTNAME: http://localhost:8085
      KC_HOSTNAME_PORT: 8085
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      #KC_HOSTNAME_STRICT: false
      #KC_HOSTNAME_STRICT_HTTPS: false
      KEYCLOAK_FRONTEND_URL: http://localhost:8085/auth
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_HEALTH_ENABLED: true
      KEYCLOAK_METRICS_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      # Admin credentials
  
      
      # Enable client and user configuration during startup
    networks:
      - sub-net 
    command: start-dev  --import-realm #--verbose
    depends_on:
      postgresql:
        condition: service_healthy
    ports:
      - 8085:8080
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/0.0.0.0/9000; echo -e \"GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n\" >&3; grep -q '\"status\": \"UP\"' <&3; exec 3<&- 3>&-"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
      start_interval: 5s


######################################################
# POSTGRES
######################################################
  postgresql:
    platform: linux/x86_64
    image: docker.io/bitnami/postgresql:latest
    container_name: postgres
    restart: always
    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=${PGLOGIN}
      - POSTGRESQL_DATABASE=DARE-Control
      - POSTGRESQL_PASSWORD=${PGPASSWORD}
    networks:
      - sub-net
    ports:
      - "5432:5432"
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U ${PGLOGIN} -d ${PGLOGIN}" ]

  adminer:
    image: adminer
    restart: always
    networks:
      - sub-net
    ports:
      - 8087:8080
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=psql
      - ADMINER_DEFAULT_DB_HOST=postgres
      - ADMINER_DEFAULT_DB_NAME=postgres
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-z", "adminer", "9000" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# Rabbit MQ
######################################################

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitdata:/var/lib/rabbitmq/
        - rabbitlogs:/var/log/rabbitmq
    networks:
      - sub-net
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


######################################################
# MINIO
######################################################
  minioAAA:
    image: quay.io/minio/minio
    container_name: minioAAA
    restart: always
    command: server /data --console-address ":9001"
    depends_on:
      keycloak: 
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MinioRootUser}
      - MINIO_ROOT_PASSWORD=${MinioRootPass}
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
      - MINIO_SERVER_URL=http://localhost:9000
      - MINIO_IDENTITY_OPENID_CONFIG_URL=${MinioIdentityConfigURL}
      - MINIO_IDENTITY_OPENID_CLIENT_ID=${MinioIdentityID}
      - MINIO_IDENTITY_OPENID_CLIENT_SECRET=${MinioOpenidSecret}
      - MINIO_IDENTITY_OPENID_DISPLAY_NAME=SSO_IDENTIFIER
      - MINIO_IDENTITY_OPENID_SCOPES=openid
      - MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC=off
      #- no_proxy=${no_proxy}
      #- http_proxy=${http_proxy}
      #- https_proxy=${https_proxy}
    networks:
      - sub-net
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  minio2:
    image: quay.io/minio/minio
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.1
    depends_on:
      keycloak: 
        condition: service_healthy
    container_name: minio2
    restart: always
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MinioRootUser}
      - MINIO_ROOT_PASSWORD=${MinioRootPass}
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9003
      #- MINIO_SERVER_URL=${MinioServerApi}
      - MINIO_IDENTITY_OPENID_CONFIG_URL=${MinioTreIdentityConfigURL}
      - MINIO_IDENTITY_OPENID_CLIENT_ID=${MinioTreIdentityID}
      - MINIO_IDENTITY_OPENID_CLIENT_SECRET=${MinioTreOpenidSecret}
      - MINIO_IDENTITY_OPENID_DISPLAY_NAME=SSO_IDENTIFIER
      - MINIO_IDENTITY_OPENID_SCOPES=openid
      - MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC=on
    networks:
      - sub-net
    volumes:
      - minio2_data:/data
    ports:
      - 9002:9000
      - 9003:9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
######################################################
# SEQ / Serilog
######################################################
  seq:
    platform: linux/x86_64
    image: datalust/seq:latest
    container_name: seq
    restart: always
    networks:
      - sub-net
    ports:
      - 5341:80
    volumes:
      - seq_data:/data
    environment:
      - ACCEPT_EULA=Y

######################################################
# VOLUME
######################################################
volumes:
    postgresql_data:
      driver: local
    postgresql_kc:
      driver: local
    minio_data:
      driver: local
    minio2_data:
      driver: local
    seq_data:
      driver: local
    rabbitdata:
      driver: local
    rabbitlogs:
      driver: local
    keycloak_data:
      driver: local  
    data-protection:
      driver: local 
       

######################################################
# networks
######################################################
networks:
  sub-net:
    driver: bridge
